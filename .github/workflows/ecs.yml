name: Deploy toECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  AWS_ECS_CLUSTER: my-ecs-cluster
  AWS_ECS_SERVICE: my-ecs-service
  AWS_ECR_REPOSITORY: sampleimage/
  IMAGE_TAG: nginx_v2.0.tar

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: path to folder
        run: cd path/to/local/folder/

      - name: Build Docker image
        run: |
          docker load -i nginx_v2.0.tar
          docker build -t ${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.AWS_ECR_REPOSITORY }}

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ env.AWS_ECS_CLUSTER }} \
            --service ${{ env.AWS_ECS_SERVICE }} \
            --force-new-deployment \
            --desired-count 1 \
            --task-definition nginx-task:${{ env.IMAGE_TAG }}

